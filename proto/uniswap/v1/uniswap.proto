syntax = "proto3";

package uniswap.types.v1;

message BigInt {
  string value = 1;
}

message BigDecimal {
  string value = 1;
}

message ERC20Tokens {
  repeated ERC20Token tokens = 1;
}

message ERC20Token {
  string address = 1;
  string name = 2;
  string symbol = 3;
  uint64 decimals = 4;
  string total_supply = 5;
  repeated string whitelist_pools = 6;
}

message Liquidity {
  string pool_address = 1;
  BigDecimal value = 2;
}

message Pools {
  repeated Pool pools =1;
}

message Pool {
  string address = 1;
  uint64 created_at_timestamp = 3;
  uint64 created_at_block_number = 4;
  ERC20Token token0 = 5;
  ERC20Token token1 = 6;
  BigInt fee_tier = 7;

  // internals
  int32 tick_spacing = 30;
  uint64 log_ordinal = 31;
  string transaction_id = 32;
  bool ignore_pool = 33;
}

message Events {
  repeated PoolSqrtPrice pool_sqrt_prices = 1;
  repeated PoolLiquidity pool_liquidities = 2;
  repeated FeeGrowthGlobal fee_growth_global_updates = 7;
  repeated FeeGrowthInside fee_growth_inside_updates = 10;
  repeated FeeGrowthOutside fee_growth_outside_updates = 11;
  repeated PoolEvent pool_events = 3;
  repeated Transaction transactions = 4;
  repeated Position positions = 5;
  repeated Flash flashes = 6;
  repeated TickCreated ticks_created = 8;
  repeated TickUpdated ticks_updated = 9;

  message FeeGrowthGlobal {
    string pool_address = 1;
    uint64 ordinal = 2;
    uint32 token_idx = 3;
    BigInt new_value = 4;
  }

  message FeeGrowthInside {
    string pool_address = 1;
    int32 tick_idx = 2;
    uint64 ordinal = 3;
    BigInt new_value = 4;
  }

  message FeeGrowthOutside {
    string pool_address = 1;
    int32 tick_lower = 2;
    int32 tick_upper = 3;
    uint64 ordinal = 4;
    BigInt new_value = 5;
  }

  message TickCreated {
    string pool_address = 2;
    BigInt idx = 3;
    BigDecimal price0 = 4;
    BigDecimal price1 = 5;
    uint64 created_at_timestamp = 6;
    uint64 created_at_block_number = 7;
    uint64 log_ordinal = 10;
    BigInt amount = 11;
  }

  message TickUpdated {
    string pool_address = 1;
    BigInt idx = 2;

    BigInt fee_growth_outside_0X_128 = 3;
    BigInt fee_growth_outside_1X_128 = 4;
  }

  message PoolSqrtPrice {
    string pool_address = 1;
    uint64 ordinal = 2;
    BigInt sqrt_price = 3;
    BigInt tick = 4;
  }

  message PoolEvent {
    oneof type {
      Swap swap = 1;
      Burn burn = 2;
      Mint mint = 3;
    }
    uint64 log_ordinal = 100;
    uint64 log_index = 101;
    string pool_address = 102;
    string token0 = 103;
    string token1 = 104;
    string fee = 105;
    string transaction_id = 106;
    uint64 timestamp = 107;
    uint64 created_at_block_number = 108;

    message Swap {
      string sender = 1;
      string recipient = 2;
      string origin = 3;
      BigDecimal amount_0 = 4;
      BigDecimal amount_1 = 5;
      BigInt sqrt_price = 6;
      BigInt liquidity = 7;
      BigInt tick = 8;
    }

    message Burn {
      string owner = 1;
      string origin = 2;
      BigInt amount = 3;
      BigDecimal amount_0 = 4;
      BigDecimal amount_1 = 5;
      BigInt tick_lower = 6;
      BigInt tick_upper = 7;
    }

    message Mint {
      string owner = 1;
      string sender = 2;
      string origin = 3;
      BigDecimal amount_0 = 4;
      BigDecimal amount_1 = 5;
      BigInt tick_lower = 6;
      BigInt tick_upper = 7;
      BigInt amount = 8;
    }
  }

  message PoolLiquidity {
    string pool_address = 1;
    BigInt liquidity = 2;

    // internals
    uint64 log_ordinal = 30;
  }

  message Flash {
    string pool_address = 1;
    BigInt fee_growth_global_0X_128 = 2;
    BigInt fee_growth_global_1X_128 = 3;
    uint64 log_ordinal = 4;
  }

  message Transaction {
    string id = 1;
    uint64 block_number = 2;
    uint64 timestamp = 3;
    uint64 gas_used = 4;
    BigInt gas_price = 5;

    // internals
    uint64 log_ordinal = 6;
  }

  message Position {
    string id = 1;
    string owner = 2;
    string pool = 3;
    string token0 = 4;
    string token1 = 5;
    string tick_lower = 6;
    string tick_upper = 7;
    string transaction = 8;
    BigInt fee_growth_inside_0_last_X_128 = 9;
    BigInt fee_growth_inside_1_last_X_128 = 10;
    BigInt liquidity = 11;
    BigDecimal amount0 = 12;
    BigDecimal amount1 = 13;

    // internals
    enum PositionType {
      UNSET = 0;
      INCREASE_LIQUIDITY = 1;
      COLLECT = 2;
      DECREASE_LIQUIDITY = 3;
      TRANSFER = 4;
    }
    PositionType position_type = 14;
    uint64 log_ordinal = 15;
    uint64 timestamp = 16;
    uint64 block_number = 17;
  }
}


message SnapshotPositions {
  repeated SnapshotPosition snapshot_positions = 1;
}

message SnapshotPosition {
  string id = 1;
  string owner = 2;
  string pool = 3;
  string position = 4;
  uint64 block_number = 5;
  uint64 timestamp = 6;
  BigDecimal liquidity = 7;
  BigDecimal deposited_token0 = 8;
  BigDecimal deposited_token1 = 9;
  BigDecimal withdrawn_token0 = 10;
  BigDecimal withdrawn_token1 = 11;
  BigDecimal collected_fees_token0 = 12;
  BigDecimal collected_fees_token1 = 13;
  string transaction = 14;
  BigInt fee_growth_inside_0_last_X_128 = 15;
  BigInt fee_growth_inside_1_last_X_128 = 16;

  // internal
  uint64 log_ordinal = 17;
}
