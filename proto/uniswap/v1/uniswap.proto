syntax = "proto3";

package uniswap.types.v1;

message ERC20Tokens {
  repeated ERC20Token tokens = 1;
}

message ERC20Token {
  string address = 1;
  string name = 2;
  string symbol = 3;
  uint64 decimals = 4;
  string total_supply = 5;
  repeated string whitelist_pools = 6;
}

message Liquidity {
  string pool_address = 1;
  string value = 2; // BigDecimal
}

message Pools {
  repeated Pool pools =1;
}

message Pool {
  string address = 1;
  uint64 created_at_timestamp = 3; // BigInt
  uint64 created_at_block_number = 4;  // BigInt
  ERC20Token token0 = 5;
  ERC20Token token1 = 6;
  uint32 fee_tier = 7;  // BigInt

  // internals
  int32 tick_spacing = 30;
  uint64 log_ordinal = 31;
  string transaction_id = 32;
  bool ignore_pool = 33;
}

message PoolSqrtPrices {
  repeated PoolSqrtPrice pool_sqrt_prices = 1;
}

message PoolSqrtPrice {
  string pool_address = 1;
  uint64 ordinal = 2;
  string sqrt_price = 3; //BigInt
  string tick = 4; // BigInt
}

message Events {
  repeated Event events = 1;
}

message Event {
  oneof type {
    Swap swap = 1;
    Burn burn = 2;
    Mint mint = 3;
  }
  uint64 log_ordinal = 100;
  uint64 log_index = 101;
  string pool_address = 102;
  string token0 = 103;
  string token1 = 104;
  string fee = 105;
  string transaction_id = 106;
  uint64 timestamp = 107;
  uint64 created_at_block_number = 108;
}

message Swap {
  string sender = 1;
  string recipient = 2;
  string origin = 3;
  string amount_0 = 4;
  string amount_1 = 5;
  string sqrt_price = 6;
  string liquidity = 7;
  int32 tick = 8;
}

message Burn {
  string owner = 1;
  string origin = 2;
  string amount = 3;
  string amount_0 = 4;
  string amount_1 = 5;
  int32 tick_lower = 6;
  int32 tick_upper = 7;
}

message Mint {
  string owner = 1;
  string sender = 2;
  string origin = 3;
  string amount_0 = 4;
  string amount_1 = 5;
  int32 tick_lower = 6;
  int32 tick_upper = 7;
  string amount = 8;
}

message EventAmounts {
  repeated EventAmount event_amounts =1;
}

message EventAmount {
  string pool_address = 1;
  string token0_addr = 2;
  string amount0_value = 3;
  string token1_addr = 4;
  string amount1_value = 5;

  // internals
  uint64 log_ordinal = 30;
}

message PoolLiquidities {
  repeated PoolLiquidity pool_liquidities = 1;
}

message PoolLiquidity {
  string pool_address = 1;
  string liquidity = 2; //BigDecimal

  // internals
  uint64 log_ordinal = 30;
}

message Ticks {
  repeated Tick ticks = 1;
}

message Tick {
  string id = 1;
  string pool_address = 2;
  string idx = 3; //BigInt
  string price0 = 4; //BigDecimal
  string price1 = 5; //BigDecimal
  uint64 created_at_timestamp = 6;
  uint64 created_at_block_number = 7;
  string fee_growth_outside_0X_128 = 8; //BigInt
  string fee_growth_outside_1X_128 = 9; //BigInt

  // internals
  uint64 log_ordinal = 10;
  string amount = 11; //BigInt
  enum Type {
    TYPE_UNSET = 0; // Protobuf default should not be used, this is used so that the consume can ensure that the value was actually specified
    LOWER = 1;
    UPPER = 2;
  };
  enum Origin {
    ORIGIN_UNSET = 0; // Protobuf default should not be used, this is used so that the consume can ensure that the value was actually specified
    MINT = 1;
    BURN = 2;
  };
  Origin origin = 12;
  Type type = 13;
}

message Fees {
  repeated Fee fees = 1;
}

message Fee {
  uint32 fee = 1;
  int32 tick_spacing = 2;
}

message Flashes {
  repeated Flash flashes = 1;
}

message Flash {
  string pool_address = 1;
  string fee_growth_global_0X_128 = 2;
  string fee_growth_global_1X_128 = 3;
  uint64 log_ordinal = 4;
}


message Transactions {
  repeated Transaction transactions = 1;
}

message Transaction {
  string id = 1;
  uint64 block_number = 2; //BigInt
  uint64 timestamp = 3; //BigInt
  uint64 gas_used = 4; // BigInt
  string gas_price = 5; //BigInt

  // internals
  uint64 log_ordinal = 6;
}

message Positions {
  repeated Position positions = 1;
}

message Position {
  string id = 1;
  string owner = 2;
  string pool = 3;
  string token0 = 4;
  string token1 = 5;
  string tick_lower = 6;
  string tick_upper = 7;
  string transaction = 8;
  string fee_growth_inside_0_last_X_128 = 9;
  string fee_growth_inside_1_last_X_128 = 10;
  string liquidity = 11;
  string amount0 = 12;
  string amount1 = 13;

  // internals
  enum PositionType {
    UNSET = 0;
    INCREASE_LIQUIDITY = 1;
    COLLECT = 2;
    DECREASE_LIQUIDITY = 3;
    TRANSFER = 4;
  }
  PositionType position_type = 14;
  uint64 log_ordinal = 15;
  uint64 timestamp = 16;
  uint64 block_number = 17;
}

message SnapshotPositions {
  repeated SnapshotPosition snapshot_positions = 1;
}

message SnapshotPosition {
  string id = 1;
  string owner = 2;
  string pool = 3;
  string position = 4;
  uint64 block_number = 5;
  uint64 timestamp = 6;
  string liquidity = 7;
  string deposited_token0 = 8;
  string deposited_token1 = 9;
  string withdrawn_token0 = 10;
  string withdrawn_token1 = 11;
  string collected_fees_token0 = 12;
  string collected_fees_token1 = 13;
  string transaction = 14;
  string fee_growth_inside_0_last_X_128 = 15;
  string fee_growth_inside_1_last_X_128 = 16;

  // internal
  uint64 log_ordinal = 17;
}
